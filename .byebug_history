c
@education
c
n
@module
n
@module
n
c
set_date(arr)
n
month
year
n
arr
c
n
arr
c
n
c
arr
c
n
c
cc
education_params
params
c
params
c
params
c
params
education_params
c
education_params
c
education_params
c
Date.new(a)
a.month
a = education_params[:start]
education_params
c
education_params
c
@work_experience
n
set_date(params[:work_experience][:start_year], params[:work_experience][:start_month])
c
@work_experience
@work_experience.start
@work_experience.start = Date.new(2000)
@work_experience
n
c
@work_experience.start
n
date
c
date
c
date
c
@work_experience.start
n
date
n
date
n
date
c
date
c
month
year
c
set_date(2011, 10)
set_date(2011, nil)
set_date(2011)
params[:work_experience][:start_year]
set_date(params[:work_experience][:start_year], params[:work_experience][:start_month])
params[:work_experience]
@work_experience
n
@work_experience
n
work_experience_params
c
date
n
date
c
nil.to_i
params[:work_experience][:start_month]
date
n
c
n
c
params
n
c
params[:work_experience][:end_year]
params[:work_experience]
c
n
c
params[:work_experience][:isCurrentJob]
params[:work_experience]
params
c
work_experience_params
c
work_experience_params
q
c
n
dst
n
success = convert(parameters, :source => "#{File.expand_path(src.path)}#{'[0]' unless animated?}", :dest => File.expand_path(dst.path))
parameters
n
convert_options
transformation_command
n
c
super.join(" ").sub(/ -crop \S+/, '').split("  ")
super.join(" ").sub(/ -crop \S+/, '')
super
c
super
c
transformation_command
convert_options
source_file_options
convert(parameters.flatten.compact.join(" ").strip.squeeze(" "), :source => "#{File.expand_path(src.path)}#{'[0]' unless animated?}", :dest => File.expand_path(dst.path))
parameters.flatten.compact.join(" ").strip.squeeze(" ")
n
convert_options
transformation_command
n
c
self.basename
self
@basename
n
c
crop_command + super.join(' ').sub(/ -crop \S+/, '')
c
crop_command + super.join(' ')
crop_command
super
crop_command + super.sub(/ -crop \S+/, '')
c
super
super.join(' ').sub(/ -crop \S+/, '').split(' ')
crop_command
crop_command + super.join(' ').sub(/ -crop \S+/, '').split(' ')
n
super.join(' ')
super
crop_command
crop_commande
n
env
n
styles
n
file
n
dst
n
parameters.flatten.compact.join(" ").strip.squeeze(" ")
parameters.flatten.compact.join(" ").strip.squeeze( " ")
parameters.flatten.compact.join(" ").strip
parameters.flatten.compact.join(" ")
parameters.flatten.compact
parameters.flatten
parameters
n
crop_command
crop_commande
super.join(' ').sub(/ -crop \S+/, '').split(' ')
super.join(' ')
super
c
image
c
image
c
image.reprocess!
image
c
n
c
@photo.crop_x
c
@photo.crop_x
c
!crop_x.blank?
crop_x.blank?
c
@photo.id
@photo.image.url
photo_params[:url]
photo_params.url
n
@photo.crop_x
@photo
n
c
n
c
photo_params
@photo.crop_x
@photo
n
c
photo_params
c
photo_params
c
photo_params
c
photo_params
c
photo_params
c
params
c
@photo
n
c
photo_params
photo_params.url
n
@photo
n
c
photo_params
c
n
@user.save
@user
user_params
c
profile_params
c
profile_params
@profile
n
c
attachment.instance.photoable
attachment.instance.save
